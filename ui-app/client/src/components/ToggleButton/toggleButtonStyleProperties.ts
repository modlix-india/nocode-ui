import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		gn: 'Default',
		dn: 'Default Toggle Button Height',
		n: 'defaultToggleButtonHeight',
		dv: '24px',
		cp: 'height',
		sel: '.comp.compToggleButton._default',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Button Height',
		n: 'outlinedToggleButtonHeight',
		dv: '24px',
		cp: 'height',
		sel: '.comp.compToggleButton._outlined',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Button Height',
		n: 'squaredToggleButtonHeight',
		dv: '24px',
		cp: 'height',
		sel: '.comp.compToggleButton._squared',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'Big Knob Toggle Button Height',
		n: 'bigKnobToggleButtonHeight',
		dv: '18px',
		cp: 'height',
		sel: '.comp.compToggleButton._bigknob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Button Height',
		n: 'smallToggleButtonHeight',
		dv: '24px',
		cp: 'height',
		sel: '.comp.compToggleButton._small',
		np: true,
	},

	{
		gn: 'Background',
		dn: 'Primary Track Background Color',
		n: 'primaryToggleCompBGColor',
		dv: '<backgroundColorOne>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._primary._on, .comp.compToggleButton._outlined._primary._on, .comp.compToggleButton._squared._primary._on, .comp.compToggleButton._bigknob._primary._on, .comp.compToggleButton._small._primary._on, .comp.compToggleButton._outlined._primary ._knob',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Secondary Track Background Color',
		n: 'secondaryToggleCompBGColor',
		dv: '<backgroundColorTwo>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._secondary._on, .comp.compToggleButton._outlined._secondary._on, .comp.compToggleButton._squared._secondary._on, .comp.compToggleButton._bigknob._secondary._on, .comp.compToggleButton._small._secondary._on, .comp.compToggleButton._outlined._secondary ._knob',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Tertiary Track Background Color',
		n: 'tertiaryToggleCompBGColor',
		dv: '<backgroundColorThree>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._tertiary._on, .comp.compToggleButton._outlined._tertiary._on, .comp.compToggleButton._squared._tertiary._on, .comp.compToggleButton._bigknob._tertiary._on, .comp.compToggleButton._small._tertiary._on, .comp.compToggleButton._outlined._tertiary ._knob',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Quaternary Track Background Color',
		n: 'quaternaryToggleCompBGColor',
		dv: '<backgroundColorFour>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._quaternary._on, .comp.compToggleButton._outlined._quaternary._on, .comp.compToggleButton._squared._quaternary._on, .comp.compToggleButton._bigknob._quaternary._on, .comp.compToggleButton._small._quaternary._on, .comp.compToggleButton._outlined._quaternary ._knob',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Quinary Track Background Color',
		n: 'quinaryToggleCompBGColor',
		dv: '<backgroundColorFive>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._quinary._on, .comp.compToggleButton._outlined._quinary._on, .comp.compToggleButton._squared._quinary._on, .comp.compToggleButton._bigknob._quinary._on, .comp.compToggleButton._small._quinary._on, .comp.compToggleButton._outlined._quinary ._knob',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Gradient One Track Background Color',
		n: 'gradientOneToggleCompBGColor',
		dv: '<gradientColorOne>',
		cp: 'background',
		sel: '.comp.compToggleButton._default._gradient1._on, .comp.compToggleButton._outlined._gradient1._on, .comp.compToggleButton._squared._gradient1._on, .comp.compToggleButton._bigknob._gradient1._on, .comp.compToggleButton._small._gradient1._on, .comp.compToggleButton._outlined._gradient1 ._knob',
		np: true,
	},

	{
		gn: 'Background',
		dn: 'Grey Background',
		n: 'greyToggleCompBgColor',
		dv: '<backgroundColorNine>',
		cp: 'background',
		sel: '.comp.compToggleButton._default, .comp.compToggleButton._squared, .comp.compToggleButton._bigknob, .comp.compToggleButton._small',
		np: true,
	},
	{
		gn: 'Background',
		dn: 'Light Background',
		n: 'lightToggleCompBgColor',
		dv: '<backgroundColorSeven>',
		cp: 'background',
		sel: '.comp.compToggleButton._outlined, .comp.compToggleButton._outlined._on ._knob, .comp.compToggleButton._default ._knob, .comp.compToggleButton._squared ._knob, .comp.compToggleButton._bigknob ._knob, .comp.compToggleButton._small ._knob',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob Height',
		n: 'defaultToggleKnobHeight',
		dv: '18px',
		cp: 'height',
		sel: '.comp.compToggleButton._default ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob Height',
		n: 'outlinedToggleKnobHeight',
		dv: '18px',
		cp: 'height',
		sel: '.comp.compToggleButton._outlined ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob Height',
		n: 'squaredToggleKnobHeight',
		dv: '18px',
		cp: 'height',
		sel: '.comp.compToggleButton._squared ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'Big Knob Toggle Knob Height',
		n: 'bigKnobToggleKnobHeight',
		dv: '24px',
		cp: 'height',
		sel: '.comp.compToggleButton._bigknob ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob Height',
		n: 'smallToggleKnobHeight',
		dv: '12px',
		cp: 'height',
		sel: '.comp.compToggleButton._small ._knob',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob Width',
		n: 'defaultToggleKnobWidth',
		dv: '<defaultToggleKnobHeight>',
		cp: 'width',
		sel: '.comp.compToggleButton._default ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob Width',
		n: 'outlinedToggleKnobWidth',
		dv: '<outlinedToggleKnobHeight>',
		cp: 'width',
		sel: '.comp.compToggleButton._outlined ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob Width',
		n: 'squaredToggleKnobWidth',
		dv: '<squaredToggleKnobHeight>',
		cp: 'width',
		sel: '.comp.compToggleButton._squared ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'Big Knob Toggle Knob Width',
		n: 'bigKnobToggleKnobWidth',
		dv: '<bigKnobToggleKnobHeight>',
		cp: 'width',
		sel: '.comp.compToggleButton._bigknob ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob Width',
		n: 'smallToggleKnobWidth',
		dv: '<smallToggleKnobHeight>',
		cp: 'width',
		sel: '.comp.compToggleButton._small ._knob',
		np: true,
	},

	{
		gn: 'Padding',
		dn: 'Knob Padding',
		n: 'toggleKnobPadding',
		dv: '5px',
		cp: 'padding',
		sel: '.comp.compToggleButton._default ._knob._withText, .comp.compToggleButton._outlined ._knob._withText, .comp.compToggleButton._squared ._knob._withText, .comp.compToggleButton._bigknob ._knob._withText, .comp.compToggleButton._small ._knob._withText',
		np: true,
	},

	{
		gn: 'Color',
		dn: 'Grey Color',
		n: 'greyToggleCompTextColor',
		dv: '<fontColorEight>',
		cp: 'color',
		sel: '.comp.compToggleButton._default ._toggleButtonLabel, .comp.compToggleButton._outlined ._toggleButtonLabel, .comp.compToggleButton._squared ._toggleButtonLabel, .comp.compToggleButton._bigknob ._toggleButtonLabel, .comp.compToggleButton._small ._toggleButtonLabel, .comp.compToggleButton._default._on ._knob._withText ._toggleButtonLabel, .comp.compToggleButton._outlined._on ._knob._withText ._toggleButtonLabel, .comp.compToggleButton._squared._on ._knob._withText ._toggleButtonLabel, .comp.compToggleButton._bigknob._on ._knob._withText ._toggleButtonLabel, .comp.compToggleButton._small._on ._knob._withText ._toggleButtonLabel',
		np: true,
	},
	{
		gn: 'Color',
		dn: 'Light Color',
		n: 'lightToggleCompTextColor',
		dv: '<fontColorTwo>',
		cp: 'color',
		sel: '.comp.compToggleButton._default._on ._toggleButtonLabel, .comp.compToggleButton._outlined._on ._toggleButtonLabel, .comp.compToggleButton._squared._on ._toggleButtonLabel, .comp.compToggleButton._bigknob._on ._toggleButtonLabel, .comp.compToggleButton._small._on ._toggleButtonLabel, .comp.compToggleButton._outlined ._knob._withText ._toggleButtonLabel',
		np: true,
	},

	{
		gn: 'Border',
		dn: 'Default Toggle Button Border',
		n: 'defaultToggleButtonBorder',
		cp: 'border',
		sel: '.comp.compToggleButton._default',
		np: true,
	},
	{
		gn: 'Border',
		dn: 'Outlined Toggle Button Border',
		n: 'outlinedToggleButtonBorder',
		dv: '1px solid',
		cp: 'border',
		sel: '.comp.compToggleButton._outlined',
		np: true,
	},
	{
		gn: 'Border',
		dn: 'Squared Toggle Button Border',
		n: 'squaredToggleButtonBorder',
		cp: 'border',
		sel: '.comp.compToggleButton._squared',
		np: true,
	},
	{
		gn: 'Border',
		dn: 'Big Knob Toggle Button Border',
		n: 'bigKnobToggleButtonBorder',
		cp: 'border',
		sel: '.comp.compToggleButton._bigknob',
		np: true,
	},
	{
		gn: 'Border',
		dn: 'Small Toggle Button Border',
		n: 'smallToggleButtonBorder',
		cp: 'border',
		sel: '.comp.compToggleButton._small',
		np: true,
	},

	{
		gn: 'Border Color',
		dn: 'Primary Track Border Color',
		n: 'primaryToggleCompBorderColor',
		dv: '<backgroundColorOne>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._primary',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Secondary Track Border Color',
		n: 'secondaryToggleCompBorderColor',
		dv: '<backgroundColorTwo>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._secondary',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Tertiary Track Border Color',
		n: 'tertiaryToggleCompBorderColor',
		dv: '<backgroundColorThree>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._tertiary',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Quaternary Track Border Color',
		n: 'quaternaryToggleCompBorderColor',
		dv: '<backgroundColorFour>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._quaternary',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Quinary Track Border Color',
		n: 'quinaryToggleCompBorderColor',
		dv: '<backgroundColorFive>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._quinary',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Gradient One Track Border Color',
		n: 'gradientOneToggleCompBorderColor',
		dv: '<gradientColorOne>',
		cp: 'border-color',
		sel: '.comp.compToggleButton._outlined._gradient1',
		np: true,
	},

	{
		gn: 'Border Color',
		dn: 'Grey Border Color',
		n: 'greyToggleCompBorderColor',
		dv: '<backgroundColorNine>',
		cp: 'border-color',
		np: true,
	},
	{
		gn: 'Border Color',
		dn: 'Light Border Color',
		n: 'lightToggleCompBorderColor',
		dv: '<backgroundColorSeven>',
		cp: 'border-color',
		np: true,
	},

	{
		gn: 'Border Radius',
		dn: 'Round Border',
		n: 'toggleCompRoundBorder',
		dv: '50%',
		cp: 'border-radius',
		sel: '.comp.compToggleButton._default ._knob, .comp.compToggleButton._outlined ._knob, .comp.compToggleButton._small ._knob',
		np: true,
	},
	{
		gn: 'Border Radius',
		dn: 'Rounded Border With Width',
		n: 'toggleCompRoundBorderWithWidth',
		dv: '100px',
		cp: 'border-radius',
		sel: '.comp.compToggleButton._default, .comp.compToggleButton._outlined, .comp.compToggleButton._bigknob, .comp.compToggleButton._bigknob ._knob, .comp.compToggleButton._default ._knob._withText, .comp.compToggleButton._outlined ._knob._withText, .comp.compToggleButton._bigknob ._knob._withText, .comp.compToggleButton._small ._knob._withText',
		np: true,
	},
	{
		gn: 'Border Radius',
		dn: 'Squared Border',
		n: 'toggleCompSquaredBorder',
		dv: '2px',
		cp: 'border-radius',
		sel: '.comp.compToggleButton._squared, .comp.compToggleButton._squared ._knob, .comp.compToggleButton._squared ._knob._withText',
		np: true,
	},
	{
		gn: 'Border Radius',
		dn: 'Small Round Border',
		n: 'toggleCompSmallRoundBorder',
		dv: '50px',
		cp: 'border-radius',
		sel: '.comp.compToggleButton._small',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob Width',
		n: 'defaultToggleKnobWithTextWidth',
		dv: 'auto',
		cp: 'width',
		sel: '.comp.compToggleButton._default ._knob._withText',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob Width',
		n: 'outlinedToggleKnobWithTextWidth',
		dv: 'auto',
		cp: 'width',
		sel: '.comp.compToggleButton._outlined ._knob._withText',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob Width',
		n: 'squaredToggleKnobWithTextWidth',
		dv: 'auto',
		cp: 'width',
		sel: '.comp.compToggleButton._squared ._knob._withText',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'Big Knob Toggle Knob Width',
		n: 'bigKnobToggleKnobWithTextWidth',
		dv: 'auto',
		cp: 'width',
		sel: '.comp.compToggleButton._bigknob ._knob._withText',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob Width',
		n: 'smallToggleKnobWithTextWidth',
		dv: 'auto',
		cp: 'width',
		sel: '.comp.compToggleButton._small ._knob._withText',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob Margin in ON State',
		n: 'defaultToggleKnobMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._default._on ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob Margin in ON State',
		n: 'outlinedToggleKnobMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._outlined._on ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob Margin in ON State',
		n: 'squaredToggleKnobMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._squared._on ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Knob Margin in ON State',
		n: 'bigKnobToggleKnobMarginOnState',
		cp: 'margin',
		sel: '.comp.compToggleButton._bigknob._on ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob Margin',
		n: 'smallToggleKnobMarginOnState',
		dv: '0px 0px 0px -6px',
		cp: 'margin',
		sel: '.comp.compToggleButton._small._on ._knob',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob Margin in OFF State',
		n: 'defaultToggleKnobMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._default._off ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob Margin in OFF State',
		n: 'outlinedToggleKnobMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._outlined._off ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob Margin in OFF State',
		n: 'squaredToggleKnobMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._squared._off ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Knob Margin in OFF State',
		n: 'bigKnobToggleKnobMarginOffState',
		cp: 'margin',
		sel: '.comp.compToggleButton._bigknob._off ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob Margin in OFF State',
		n: 'smallToggleKnobMarginOffState',
		dv: '0px 0px 0px 6px',
		cp: 'margin',
		sel: '.comp.compToggleButton._small._off ._knob',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Label Margin in ON State',
		n: 'defaultToggleLabelMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._default._off ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Label Margin in ON State',
		n: 'outlinedToggleLabelMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._outlined._off ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Label Margin in ON State',
		n: 'squaredToggleLabelMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._squared._off ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Label Margin in ON State',
		n: 'bigKnobToggleLabelMarginOnState',
		dv: '0px 0px 0px -5px',
		cp: 'margin',
		sel: '.comp.compToggleButton._bigknob._off ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Label Margin',
		n: 'smallToggleLabelMarginOnState',
		dv: '0px 0px 0px -3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._small._off ._toggleButtonLabel._ontrack',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Label Margin in OFF State',
		n: 'defaultToggleLabelMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._default._on ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Label Margin in OFF State',
		n: 'outlinedToggleLabelMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._outlined._on ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Label Margin in OFF State',
		n: 'squaredToggleLabelMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._squared._on ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Label Margin in OFF State',
		n: 'bigKnobToggleLabelMarginOffState',
		dv: '0px 0px 0px 5px',
		cp: 'margin',
		sel: '.comp.compToggleButton._bigknob._on ._toggleButtonLabel._ontrack',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Label Margin in OFF State',
		n: 'smallToggleLabelMarginOffState',
		dv: '0px 0px 0px 3px',
		cp: 'margin',
		sel: '.comp.compToggleButton._small._on ._toggleButtonLabel._ontrack',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob BoxShadow in ON State',
		n: 'defaultToggleKnobBoxShadowOnState',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._default._on ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob BoxShadow in ON State',
		n: 'outlinedToggleKnobBoxShadowOnState',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._outlined._on ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob BoxShadow in ON State',
		n: 'squaredToggleKnobBoxShadowOnState',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._squared._on ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Knob BoxShadow in ON State',
		n: 'bigKnobToggleKnobBoxShadowOnState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._bigknob._on ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob BoxShadow',
		n: 'smallToggleKnobBoxShadowOnState',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._small._on ._knob',
		np: true,
	},

	{
		gn: 'Default',
		dn: 'Default Toggle Knob BoxShadow in OFF State',
		n: 'defaultToggleKnobBoxShadowOffState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._default._off ._knob',
		np: true,
	},
	{
		gn: 'Outlined',
		dn: 'Outlined Toggle Knob BoxShadow in OFF State',
		n: 'outlinedToggleKnobBoxShadowOffState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._outlined._off ._knob',
		np: true,
	},
	{
		gn: 'Squared',
		dn: 'Squared Toggle Knob BoxShadow in OFF State',
		n: 'squaredToggleKnobBoxShadowOffState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._squared._off ._knob',
		np: true,
	},
	{
		gn: 'BigKnob',
		dn: 'BigKnob Toggle Knob BoxShadow in OFF State',
		n: 'bigKnobToggleKnobBoxShadowOffState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._bigknob._off ._knob',
		np: true,
	},
	{
		gn: 'Small',
		dn: 'Small Toggle Knob BoxShadow in OFF State',
		n: 'smallToggleKnobBoxShadowOffState',
		dv: '0px 0px 5px #aaa',
		cp: 'box-shadow',
		sel: '.comp.compToggleButton._small._off ._knob',
		np: true,
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.dv)
		.map(({ n: name, dv: defaultValue }) => [name, defaultValue!]),
);
