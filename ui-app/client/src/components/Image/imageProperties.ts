import {
	SCHEMA_BOOL_COMP_PROP,
	SCHEMA_STRING_COMP_PROP,
	SCHEMA_NUM_COMP_PROP,
} from '../../constants';
import {
	ComponentPropertyDefinition,
	ComponentPropertyEditor,
	ComponentPropertyGroup,
	ComponentStylePropertyDefinition,
} from '../../types/common';
import { COMMON_COMPONENT_PROPERTIES, COMPONENT_STYLE_GROUP_PROPERTIES } from '../util/properties';

const propertiesDefinition: Array<ComponentPropertyDefinition> = [
	COMMON_COMPONENT_PROPERTIES.onClick,
	{
		name: 'src',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Default image source.',
		description: 'Default image source.',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'src2',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Image source for Tablet landscape screen',
		description: 'source of the image for Tablet landscape screen.',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'src3',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Image source for Tablet portrait screen',
		description: 'source of the image for Tablet portrait screen.',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'src4',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Image source for Mobile landscape screen',
		description: 'source of the image for Mobile landscape screen.',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'src5',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Image source for Mobile portrait screen',
		description: 'source of the image for Mobile portrait screen.',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'alt',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Alt Text',
		description: 'Text describing the image.',
		defaultValue: '',
		group: ComponentPropertyGroup.BASIC,
	},
	{
		name: 'enhancementType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Enhancement Type',
		description: 'Type of image enhancement to apply',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'none',
		enumValues: [
			{ name: 'none', displayName: 'None' },
			{ name: 'zoomPreview', displayName: 'Zoom Preview' },
			{ name: 'magnification', displayName: 'Magnification' },
			{ name: 'comparison', displayName: 'Image Comparison' },
		],
	},
	{
		name: 'zoomPreviewVisible',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Always Show Zoom Preview',
		description: 'Whether to always show zoom preview or only on hover',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'zoomFactor',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Zoom Factor',
		description: 'Magnification level for zoom preview',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 2,
	},
	{
		name: 'previewPlacement',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Preview Placement',
		description: 'Position of the zoom preview window',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'right',
		enumValues: [
			{ name: 'right', displayName: 'Right' },
			{ name: 'left', displayName: 'Left' },
			{ name: 'top', displayName: 'Top' },
			{ name: 'bottom', displayName: 'Bottom' },
		],
	},
	{
		name: 'previewWidth',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Preview Width',
		description: 'Width of the zoom preview window in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 300,
	},
	{
		name: 'previewHeight',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Preview Height',
		description: 'Height of the zoom preview window in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 300,
	},
	{
		name: 'magnifierSize',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Magnifier Size',
		description: 'Size of the magnifier in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 150,
	},
	{
		name: 'magnificationFactor',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Magnification Factor',
		description: 'Magnification level for the magnifier',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 2,
	},
	{
		name: 'comparisonSrc',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Comparison Image Source',
		description: 'Second image source for comparison slider',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'sliderPosition',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Initial Slider Position',
		description: 'Initial position of the comparison slider (percentage)',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 50,
	},
	{
		name: 'sliderOrientation',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Slider Orientation',
		description: 'Orientation of the comparison slider',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'horizontal',
		enumValues: [
			{ name: 'horizontal', displayName: 'Horizontal' },
			{ name: 'vertical', displayName: 'Vertical' },
		],
	},
	{
		name: 'sliderWidth',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Slider Width',
		description: 'Width of the comparison slider handle in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 2,
	},
	{
		name: 'sliderHandleSize',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Slider Handle Size',
		description: 'Size of the slider handle in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 40,
	},
	{
		name: 'sliderHandleType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Slider Handle Type',
		description: 'Type of handle for the comparison slider',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'default',
		enumValues: [
			{ name: 'default', displayName: 'Default Arrows' },
			{ name: 'custom', displayName: 'Custom Image' },
			{ name: 'none', displayName: 'No Handle' },
		],
	},
	{
		name: 'sliderHandleImage',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Custom Slider Handle Image',
		description: 'Custom image for the slider handle',
		editor: ComponentPropertyEditor.IMAGE,
		group: ComponentPropertyGroup.ADVANCED,
	},

	{
		name: 'fallBackImg',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Fallback image',
		description: 'FallBack image will be dispalyed when main image is broken.',
		group: ComponentPropertyGroup.ADVANCED,
		editor: ComponentPropertyEditor.IMAGE,
	},
	{
		name: 'imgLazyLoading',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Image lazy loading',
		description: 'Image lazy loading',
		defaultValue: false,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'stopPropagation',
		schema: SCHEMA_BOOL_COMP_PROP,
		group: ComponentPropertyGroup.ADVANCED,
		displayName: 'Stop propagation of click event',
		description:
			'Stop propagation of click event which will not trigger the container click event.',
		defaultValue: false,
	},
	{
		name: 'preventDefault',
		schema: SCHEMA_BOOL_COMP_PROP,
		group: ComponentPropertyGroup.ADVANCED,
		displayName: 'Prevent default of click event',
		description: 'Prevent default of click event.',
		defaultValue: false,
	},
	{
		name: 'useObjectToRender',
		schema: SCHEMA_BOOL_COMP_PROP,
		group: ComponentPropertyGroup.ADVANCED,
		displayName: 'Use Object to render (SVG only)',
		defaultValue: false,
	},
	{
		name: 'tooltipText',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Text',
		description: 'Text to display in the tooltip when hovering over the image',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: '',
	},
	{
		name: 'tooltipEnabled',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Enable Tooltip',
		description: 'Whether to show a tooltip on hover',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'tooltipPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Position',
		description: 'Position of the tooltip relative to the image',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'bottom',
		enumValues: [
			{ name: 'top', displayName: 'Top' },
			{ name: 'bottom', displayName: 'Bottom' },
			{ name: 'left', displayName: 'Left' },
			{ name: 'right', displayName: 'Right' },
		],
	},
	{
		name: 'tooltipOffset',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Tooltip Offset',
		description: 'Distance between the tooltip and the image in pixels',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 10,
	},
	COMMON_COMPONENT_PROPERTIES.visibility,
];

const stylePropertiesDefinition: ComponentStylePropertyDefinition = {
	'': [
		COMPONENT_STYLE_GROUP_PROPERTIES.layout.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.position.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.image.type,
	],
	image: [
		COMPONENT_STYLE_GROUP_PROPERTIES.image.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.layout.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.position.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	zoomPreview: [
		COMPONENT_STYLE_GROUP_PROPERTIES.layout.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.position.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	magnifier: [
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	sliderHandle: [
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	sliderLine: [
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	tooltip: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
};

export { propertiesDefinition, stylePropertiesDefinition };
