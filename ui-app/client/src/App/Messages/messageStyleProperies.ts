import { StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		n: 'messagesOuterContainerLeft',
		cp: 'left',
		dn: 'Messages Outer Container Left',
		de: 'Messages Outer Container position on the page left',
		dv: '10px',
		sel: ' ',
	},
	{
		n: 'messagesOuterContainerRight',
		cp: 'right',
		dn: 'Messages Outer Container Right',
		de: 'Messages Outer Container position on the page right',
		sel: ' ',
	},
	{
		n: 'messagesOuterContainerTop',
		cp: 'top',
		dn: 'Messages Outer Container Top',
		de: 'Messages Outer Container position on the page top',
		dv: '100vh',
		sel: ' ',
	},
	{
		n: 'messagesOuterContainerBottom',
		cp: 'bottom',
		dn: 'Messages Outer Container Bottom',
		de: 'Messages Outer Container position on the page bottom',
		dv: ' ',
		sel: ' ',
	},
	{
		n: 'messagesOuterContainerTransform',
		cp: 'transform',
		dn: 'Messages Outer Container Top',
		de: 'Messages Outer Container position on the page top',
		dv: 'translateY(-100%)',
		sel: ' ',
	},
	{
		n: 'messagesOuterContainerMargin',
		cp: 'margin',
		dn: 'Messages Outer Container Margin',
		de: 'Messages Outer Container margin',
		sel: ' ',
	},
	{
		n: 'messageContainerWidth',
		cp: 'width',
		dn: 'Messages Container Width',
		de: 'Messages Container width',
		dv: '30vw',
		sel: '._message',
	},
	{
		n: 'messageContainerGap',
		cp: 'gap',
		dn: 'Messages Container item gap',
		de: 'Messages Container item gap',
		dv: '10px',
		sel: '._message',
	},
	{
		n: 'messageContainerBackground',
		cp: 'background',
		dn: 'Messages Container Background',
		de: 'Messages Container background',
		dv: '<backgroundColorSeven>',
		sel: '._message',
	},
	{
		n: 'messageContainerBackgroundError',
		cp: 'background',
		dn: 'Messages Container Background Error',
		de: 'Messages Container background error',
		sel: '._message.ERROR',
	},
	{
		n: 'messageContainerBackgroundWarning',
		cp: 'background',
		dn: 'Messages Container Background Warning',
		de: 'Messages Container background warning',
		sel: '._message.WARNING',
	},
	{
		n: 'messageContainerBackgroundInformation',
		cp: 'background',
		dn: 'Messages Container Background Information',
		de: 'Messages Container background information',
		sel: '._message.INFORMATION',
	},
	{
		n: 'messageContainerBackgroundSuccess',
		cp: 'background',
		dn: 'Messages Container Background Success',
		de: 'Messages Container background success',
		sel: '._message.SUCCESS',
	},
	{
		n: 'messageContainerBorderRadius',
		cp: 'border-radius',
		dn: 'Message Container border radius',
		de: 'Message Container border radius',
		dv: '0px 4px 4px 0px',
		sel: '._message',
	},
	{
		n: 'messageContainerPadding',
		cp: 'padding',
		dn: 'Messages Container Padding',
		de: 'Messages Container padding',
		dv: '10px',
		sel: '._message',
	},
	{
		n: 'messageFont',
		cp: 'font',
		dn: 'Message Font',
		de: 'Message Font',
		dv: '<primaryFont>',
		sel: '._message ._msgString',
	},
	{
		n: 'messageIconSize',
		cp: 'font-size',
		dn: 'Message Icon Size',
		de: 'Message Icon Size',
		sel: '._message ._msgIcon',
	},
	{
		n: 'messageCloseIconSize',
		cp: 'font-size',
		dn: 'Message Close Icon Size',
		de: 'Message Close Icon Size',
		sel: '._message ._msgCloseIcon',
	},
	{
		n: 'messageBorderLeft',
		cp: 'border-left',
		dn: 'Message Container Border Left',
		de: 'Message Container Border Left',
		dv: '7px solid',
		sel: '._message, ._msgStackTrace ',
	},
	{
		n: 'messagesGap',
		cp: 'gap',
		dn: 'Gap between messages',
		de: 'Gap between messages',
		dv: '10px',
		sel: ' ',
	},
	{
		n: 'messageErrorColor',
		cp: 'color',
		dn: 'Message error color',
		de: 'Message error color',
		dv: '<errorColor>',
		sel: '._message.ERROR ._msgString, ._message.ERROR i, ._msgStackTrace.ERROR',
	},
	{
		n: 'messageWarningColor',
		cp: 'color',
		dn: 'Message warning color',
		de: 'Message warning color',
		dv: '<warningColor>',
		sel: '._message.WARNING ._msgString, ._message.WARNING i, ._msgStackTrace.WARNING',
	},
	{
		n: 'messageInformationColor',
		cp: 'color',
		dn: 'Message information color',
		de: 'Message information color',
		dv: '<informationColor>',
		sel: '._message.INFORMATION ._msgString, ._message.INFORMATION i, ._msgStackTrace.INFORMATION ',
	},
	{
		n: 'messageSuccessColor',
		cp: 'color',
		dn: 'Message success color',
		de: 'Message success color',
		dv: '<successColor>',
		sel: '._message.SUCCESS ._msgString, ._message.SUCCESS i, ._msgStackTrace.SUCCESS',
	},
	{
		n: 'messageErrorBorderColor',
		cp: 'border-color',
		dn: 'Message error border color',
		de: 'Message error border color',
		dv: '<errorColor>',
		sel: '._message.ERROR',
	},
	{
		n: 'messageWarningBorderolor',
		cp: 'border-color',
		dn: 'Message warning border color',
		de: 'Message warning border color',
		dv: '<warningColor>',
		sel: '._message.WARNING',
	},
	{
		n: 'messageInformationBorderColor',
		cp: 'border-color',
		dn: 'Message information border color',
		de: 'Message information border color',
		dv: '<informationColor>',
		sel: '._message.INFORMATION',
	},
	{
		n: 'messageSuccessBorderColor',
		cp: 'border-color',
		dn: 'Message success border color',
		de: 'Message success border color',
		dv: '<successColor>',
		sel: '._message.SUCCESS',
	},
	{
		n: 'messageAnimation',
		cp: 'animation',
		dn: 'Message Animation',
		de: 'Message Animation',
		sel: '._message',
	},
	{
		n: 'messageBoxShadow',
		cp: 'box-shadow',
		dn: 'Message Box Shadow',
		de: 'Message Box Shadow',
		sel: '._message',
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.dv)
		.map(({ n: name, dv: defaultValue }) => [name, defaultValue!]),
);
